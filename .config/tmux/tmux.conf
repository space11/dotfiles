# Reload Tmux config with prefix + r
bind r source-file ~/.tmux.conf \; display "Tmux config *reloaded*."

# Prefix configuration
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# General settings
set -g repeat-time 2000                        # Adjust repeat time (default: 500ms)
set -g default-terminal "screen-256color"     # Enable 256-color support
set -as terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[2 q'  # Cursor style for Neovim compatibility
set -g mouse on                               # Enable mouse mode
set -sg escape-time 1                         # Remove delay for escape sequences
set -g focus-events on                        # Enable focus events for terminal applications
set -g base-index 1                           # Windows start at index 1
setw -g pane-base-index 1                     # Panes start at index 1
set -g renumber-windows on                    # Maintain ordinality after swapping windows; and also make sure there is no gaps after killing windows:

# Copy mode and clipboard
setw -g mode-keys vi                          # Enable vim keybindings in copy mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X rectangle-toggle
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -sel -i clipboard'
bind P paste-buffer                           # Paste buffer keybinding
unbind -T copy-mode-vi MouseDragEnd1Pane

# Split panes
bind -N "New vertically split" \\ split-window -h -c '#{pane_current_path}'
bind -N "New horizontal split" - split-window -v -c '#{pane_current_path}'
bind -N "New 33%-wide vertical split" | split-window -fh -c '#{pane_current_path}' -l 33%
bind -N "New 33%-high horizontal split" _ split-window -fv -c '#{pane_current_path}' -l 33%

# Pane navigation (vim-style)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize panes (vim-style)
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Window navigation (vim-style)
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Vim-tmux navigation compatibility
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"

# Visual improvements
set-option -g default-terminal "tmux-256color"

# Set border with the executed command - check .zshrc for related part there.
# set -g status on  
# set -g status-left-length 100  # Dłuższa długość dla pełnych komend  
# set -g status-left "#[bold]#{pane_last_command}"  
set -g pane-border-status bottom
set -g pane-border-format "#{pane_index}"  # Wyświetla pełną komendę w ramce
set -g status-right-length 50  # Ustala długość wyświetlanej komendy w pasku statusu

# Plugin configuration
set -g @plugin 'rose-pine/tmux'               # Rose-pine theme
set -g @plugin 'tmux-plugins/tpm'             # Tmux Plugin Manager
set -g @plugin 'tmux-plugins/tmux-sensible'   # Sensible default tmux settings

# Rose-pine theme settings
set -g @rose_pine_variant 'main'
set -g @rose_pine_host 'on'
set -g @rose_pine_date_time 'on'
set -g @rose_pine_user 'on'
set -g @rose_pine_directory 'on'
set -g @rose_pine_bar_bg_disable 'on'
set -g @rose_pine_bar_bg_disabled_color_option 'default'
set -g @rose_pine_only_windows 'on'
set -g @rose_pine_disable_active_window_menu 'on'
set -g @rose_pine_default_window_behavior 'on'
set -g @rose_pine_show_current_program 'on'
set -g @rose_pine_show_pane_directory 'on'

set -g @rose_pine_left_separator ' > '
set -g @rose_pine_right_separator ' < '
set -g @rose_pine_field_separator ' | '
set -g @rose_pine_window_status_separator "  "

# Initialize Tmux Plugin Manager (keep this at the end)
run '~/.tmux/plugins/tpm/tpm'


